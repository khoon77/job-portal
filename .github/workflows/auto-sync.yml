name: Auto Sync Job Data

on:
  schedule:
    # 5분마다 실행
    - cron: '*/5 * * * *'
  
  # 수동 실행 가능
  workflow_dispatch:

jobs:
  sync-jobs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Firebase credentials
      env:
        FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
      run: |
        # 모든 제어 문자 제거 및 JSON 정리
        echo "$FIREBASE_CREDENTIALS" | tr -d '\r\n\t' | sed 's/[[:cntrl:]]//g' | python -c "
import sys, json
try:
    content = sys.stdin.read().strip()
    # JSON 파싱 테스트
    data = json.loads(content)
    # 올바른 형식으로 재출력
    with open('job-portal-c9d7f-firebase-adminsdk-fbsvc-b0f6caa11d.json', 'w') as f:
        json.dump(data, f, indent=2)
    print('Firebase credentials file created and validated')
except Exception as e:
    print(f'Error processing credentials: {e}')
    exit(1)
"
    
    - name: Run auto sync
      env:
        GITHUB_ACTIONS: true
      run: |
        echo "🔄 신규 게시글 동기화 시작..."
        python auto_sync_scheduler.py
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f job-portal-c9d7f-firebase-adminsdk-fbsvc-b0f6caa11d.json

  cleanup-old-data:
    runs-on: ubuntu-latest
    # 매일 오전 1시에만 실행
    if: github.event.schedule == '0 1 * * *'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Firebase credentials
      env:
        FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
      run: |
        # 모든 제어 문자 제거 및 JSON 정리
        echo "$FIREBASE_CREDENTIALS" | tr -d '\r\n\t' | sed 's/[[:cntrl:]]//g' | python -c "
import sys, json
try:
    content = sys.stdin.read().strip()
    # JSON 파싱 테스트
    data = json.loads(content)
    # 올바른 형식으로 재출력
    with open('job-portal-c9d7f-firebase-adminsdk-fbsvc-b0f6caa11d.json', 'w') as f:
        json.dump(data, f, indent=2)
    print('Firebase credentials file created and validated')
except Exception as e:
    print(f'Error processing credentials: {e}')
    exit(1)
"
    
    - name: Run data cleanup
      env:
        GITHUB_ACTIONS: true
      run: |
        echo "🧹 오래된 데이터 정리 시작..."
        python data_cleanup.py
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f job-portal-c9d7f-firebase-adminsdk-fbsvc-b0f6caa11d.json